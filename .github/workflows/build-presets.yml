name: Build PDFs (presets)

on:
  workflow_dispatch:
    inputs:
      build_all:
        description: "Build all presets (if false, build only 'preset')"
        type: boolean
        required: true
        default: true
      preset:
        description: "Preset name to build when build_all=false"
        required: false
        default: ""

jobs:
  build-pdf:
    runs-on: ubuntu-latest

    container: 
      image: pandoc/extra:latest

    strategy:
      fail-fast: false
      matrix:
        include:
          # â†“ Define your presets here
          - name: first30
            keep: '.first30'
          - name: general-linux
            keep: '.general#linux'
          - name: general-windows
            keep: '.general#windows'
          - name: os-info
            keep: '[".os"]'
          
    steps:
      - uses: actions/checkout@v4

      - name: Install Bash
        run: |
          apk add --no-cache bash

      - name: Get version
        shell: bash
        run: |
          apk add --no-cache curl jq
          tag="$(curl -fsSL -H "Authorization: Beaerer ${{ github.token }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/tags?per_page=1" \
            | jq -r '.[0].name')"
          [ "$tag" != "null" ] && [ -n "$tag" ] || { echo "No tags found!"; exit 1; }
          echo "tag=$tag" >> "$GITHUB_OUTPUT"
          echo "TAG=$tag" >> "$GITHUB_ENV"

      - name: Install fonts
        run: |
          apk add --no-cache fontconfig font-noto
          fc-cache -fv

      - name: Setup Buildinfo
        run : |
          DATE="$(date -u '+%m-%d-%Y')"
          echo "\renewcommand{\version}{\texttt{\detokenize{$TAG}}}" >> build/buildinfo.tex
          echo "\renewcommand{\builddate}{$DATE}" >> build/buildinfo.tex

      # Skip presets if build_all=false and this isn't the chosen one
      - name: Build preset
        if: ${{ inputs.build_all || matrix.name == inputs.preset }}
        env:
          NAME:      ${{ matrix.name }}
          KEEP:      ${{ matrix.keep }}
        run: |
          FILTER='--lua-filter=build/extract-sections.lua'

          echo "Preset: ${NAME}"
          echo "Keep  : ${KEEP}"

          TEXINPUTS=".:tex//:" pandoc ccdc-bible.md \
            --metadata-file=build/meta.yaml \
            --include-in-header=build/preamble.tex \
            --include-in-header=build/buildinfo.tex \
            --toc \
            -o "./${NAME}-$TAG.pdf" \
            --pdf-engine="xelatex" \
            $FILTER -M keep="${KEEP}" \
            --lua-filter=build/h2-pagebreak.lua

      - name: Upload PDFs
        uses: actions/upload-artifact@v4
        with:
          name: pdfs
          path: ./*.pdf
